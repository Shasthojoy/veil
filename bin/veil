#!/bin/bash

if [[ $1 == :* ]] ; then
    COLON_VEIL_SERVER=$1
    shift
    export VEIL_SERVER=${COLON_VEIL_SERVER:1}
else
    if [ -z "$VEIL_SERVER" ] ; then
        export VEIL_SERVER=development
    fi
fi

if [[ "$VEIL_SERVER" == "development" || "$VEIL_SERVER" == "test" ]] ; then
    export PYTHONDONTWRITEBYTECODE=True
fi

if [ -z "$VEIL_HOME" ] ; then
    export VEIL_HOME=$(pwd)
fi
if [ ! -d $VEIL_HOME/env/bin ] ; then
    if [[ ("$1" != "deploy") && ("$1" != "init") ]] ; then
        echo "VEIL_HOME is invalid"
        exit 1
    fi
fi
if [ -z `readlink $0` ] ; then
    BIN_DIR=$(cd `dirname $0` && pwd)
else
    BIN_DIR=$(dirname $(readlink $0))
fi
export VEIL_FRAMEWORK_HOME=$(dirname $BIN_DIR)

if [ -f $VEIL_HOME/env/bin/activate ] ; then
    source $VEIL_HOME/env/bin/activate
fi

function veil_init {
    find $VEIL_FRAMEWORK_HOME -type f -name "*.pyc" -delete
    find $VEIL_HOME -type f -name "*.pyc" -delete
    sudo apt-get -y install iptables python-dev python-virtualenv python-pip language-pack-en unzip wget
    if [ ! -f /usr/bin/veil ]; then
        sudo ln -s $VEIL_FRAMEWORK_HOME/bin/veil /usr/bin/veil
    fi
    if [ ! -d $VEIL_HOME/env ]; then
        virtualenv env
        echo "$VEIL_FRAMEWORK_HOME/src" > env/lib/python2.7/site-packages/veil.pth
        echo "$VEIL_HOME/src" >> env/lib/python2.7/site-packages/veil.pth
        source $VEIL_HOME/env/bin/activate
        (cd $VEIL_HOME; sudo veil execute pip install pytz)
    fi
    if [ ! -f $VEIL_HOME/.git/hooks/pre-commit ]; then
        git config core.quotepath false
        ln -s $VEIL_FRAMEWORK_HOME/src/discipline_coach.py $VEIL_HOME/.git/hooks/pre-commit
    fi
}

case "$1" in
    execute)
        shift
        exec $@
        ;;
    sleep)
        shift
        sleep $1
        shift
        exec $@
        ;;
    tunnel-to)
        shift
        sudo veil install veil_installer.component_resource?veil.environment.tunnel
        exec veil environment tunnel tunnel-up $@
        ;;
    up)
        shift
        find $VEIL_FRAMEWORK_HOME -type f -name "*.pyc" -delete
        find $VEIL_HOME -type f -name "*.pyc" -delete
        exec veil server supervisor up $@
        ;;
    down)
        exec veil server supervisor down
        ;;
    install)
        shift
        exec python -m veil_installer $@
        ;;
    install-server)
        shift
        exec python -m veil_installer veil.server.in_service.veil_server_resource $@
        ;;
    deploy-env)
        shift
        sudo veil install veil_installer.component_resource?veil.environment.in_service
        exec veil environment in-service deploy-env $@
        ;;
    patch-env)
        shift
        sudo veil install veil_installer.component_resource?veil.environment.in_service
        exec veil environment in-service patch-env $@
        ;;
    rollback-env)
        shift
        exec veil environment in-service rollback-env $@
        ;;
    init)
        shift
        veil_init
        ;;
    deploy)
        shift
        veil_init
        exec veil server in-service deploy $@
        ;;
    patch)
        shift
        exec veil server in-service patch $@
        ;;
    backup-env)
        shift
        exec veil environment backup create $@
        ;;
    backup)
        shift
        exec veil server backup create $@
        ;;
    restore-from-baseline)
        shift
        exec veil environment backup restore-from-baseline $@
        ;;
    migrate)
        exec veil server in-service migrate
        ;;
    pull)
        exec veil development git pull
        ;;
    self-check)
        shift
        exec veil :test development self-checker self-check $@
        ;;
    quick-check)
        shift
        exec veil :test development self-checker quick-check $@
        ;;
    *)
        exec python -m veil "$@"
esac

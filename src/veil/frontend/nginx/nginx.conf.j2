user {{ config.owner }} {{ config.owner_group }};
worker_processes {{ config.get('worker_processes_count', 4) }};
daemon off;

{% if 'pid_file' in config %}
pid {{ config.pid_file }};
{% endif %}

events {
    worker_connections  {{ config.get('connections_count_per_worker', 1024) }};
    use epoll;
}

http {
    default_type application/octet-stream;

    keepalive_timeout 120 65;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    server_tokens off;

    client_body_buffer_size 128k;
    client_max_body_size 10m;

    {% if config.enable_compression %}
        gzip on;
        gzip_static off;
        gzip_proxied any;
        gzip_min_length 512;
        gzip_comp_level 3;
        gzip_types text/plain text/css text/javascript application/javascript application/x-javascript application/json text/x-json text/xml application/xml application/xml+rss application/atom+xml image/x-icon image/bmp image/x-ms-bmp;
        gzip_vary on;
        gzip_buffers 64 8k;
        gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    {% else %}
        gzip off;
        gzip_static off;
    {% endif %}

    perl_set $unix_timestamp 'sub {
      time();
    }';

    proxy_read_timeout 200;
    proxy_buffers 256 8k;
    proxy_intercept_errors on;
    proxy_pass_request_headers on;
    proxy_set_header Host $host;
    proxy_set_header Accept-Encoding "";
    {% if not config.has_bunker or config.is_bunker %}
    proxy_set_header X-Real-IP $remote_addr;
    {% else %}
    set_real_ip_from {{ config.bunker_ip }};
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    {% endif %}
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Request-Code $unix_timestamp-$cookie_vbcode;
    proxy_redirect off;
    proxy_next_upstream error timeout;

    log_format logstash_json '{ "@timestamp": "$time_iso8601", '
                             '"@type": "nginx", '
                             '"@fields": { '
                             '"user_code": "$cookie_vucode", '
                             '"browser_code": "$cookie_vbcode", '
                             '"remote_addr": "$remote_addr", '
                             '"request": "$request", '
                             '"request_time": "$request_time", '
                             '"request_code": "$unix_timestamp-$cookie_vbcode", '
                             '"request_method": "$request_method", '
                             '"status": "$status", '
                             '"body_bytes_sent": "$body_bytes_sent", '
                             '"http_referrer": "$http_referer", '
                             '"http_user_agent": "$http_user_agent", '
                             '"http_x_forwarded_for": "$http_x_forwarded_for" } }';

    {% for server_properties in config.servers.values() %}
        {% for upstream_name, upstream_servers in (server_properties.get('upstreams') or {}).items() %}
        upstream {{ upstream_name }} {
            {% for upstream_server in upstream_servers %}
            server {{ upstream_server.host }}:{{ upstream_server.port }};
            {% endfor %}
        }
        {% endfor %}
    {% endfor %}

    {% for server_name, server_properties in config.servers.items() %}
    server {
        server_name  {{ server_name }};
        error_log {{ config.log_directory }}/{{ server_name }}-error.log;
        access_log {{ config.log_directory }}/{{ server_name }}-access.log logstash_json;
        {% for key, value in server_properties.items() %}
            {% if 'locations' == key %}
                {% for location, location_properties in value.items() %}
                location {{ location }} {
                    {% for key, value in location_properties.items() %}
                        {% if '_' == key %}
                            {{ value }}
                        {% else %}
                            {{ key }} {{ value }};
                        {% endif %}
                    {% endfor %}
                }
                {% endfor %}
            {% elif 'upstreams' == key %}
                {# skip this #}
            {% elif 'error_page_dir' == key %}
                {# skip #}
            {% elif 'error_page' == key %}
                {% if value %}
                    {% for error_number, error_page_name in value.items() %}
                        error_page {{ error_number }} /{{ error_page_name }};
                        location = /{{ error_page_name }} {
                            root {{ server_properties['error_page_dir'] }};
                            }
                    {% endfor %}
                {% endif %}
            {% else %}
                {{ key }} {{ value }};
            {% endif %}
        {% endfor %}
    }
    {% endfor %}

    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml rss;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        application/x-javascript              js;
        application/atom+xml                  atom;

        text/mathml                           mml;
        text/plain                            txt;
        text/vnd.sun.j2me.app-descriptor      jad;
        text/vnd.wap.wml                      wml;
        text/x-component                      htc;

        image/png                             png;
        image/tiff                            tif tiff;
        image/vnd.wap.wbmp                    wbmp;
        image/x-icon                          ico;
        image/x-jng                           jng;
        image/x-ms-bmp                        bmp;

        application/java-archive              jar war ear;
        application/mac-binhex40              hqx;
        application/msword                    doc;
        application/pdf                       pdf;
        application/postscript                ps eps ai;
        application/rtf                       rtf;
        application/vnd.ms-excel              xls;
        application/vnd.ms-powerpoint         ppt;
        application/vnd.wap.wmlc              wmlc;
        application/vnd.wap.xhtml+xml         xhtml;
        application/x-cocoa                   cco;
        application/x-java-archive-diff       jardiff;
        application/x-java-jnlp-file          jnlp;
        application/x-makeself                run;
        application/x-perl                    pl pm;
        application/x-pilot                   prc pdb;
        application/x-rar-compressed          rar;
        application/x-redhat-package-manager  rpm;
        application/x-sea                     sea;
        application/x-shockwave-flash         swf;
        application/x-stuffit                 sit;
        application/x-tcl                     tcl tk;
        application/x-x509-ca-cert            der pem crt;
        application/x-xpinstall               xpi;
        application/zip                       zip;

        application/octet-stream              bin exe dll;
        application/octet-stream              deb;
        application/octet-stream              dmg;
        application/octet-stream              eot;
        application/octet-stream              iso img;
        application/octet-stream              msi msp msm;

        audio/midi                            mid midi kar;
        audio/mpeg                            mp3;
        audio/x-realaudio                     ra;

        video/3gpp                            3gpp 3gp;
        video/mpeg                            mpeg mpg;
        video/quicktime                       mov;
        video/x-flv                           flv;
        video/x-mng                           mng;
        video/x-ms-asf                        asx asf;
        video/x-ms-wmv                        wmv;
        video/x-msvideo                       avi;
    }
}